name: Build Signed Release APKs

on:
  workflow_dispatch:

jobs:
  build-signed:
    runs-on: ubuntu-latest
    env:
      KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
      KEY_ALIAS:       ${{ secrets.KEY_ALIAS }}
      KEY_PASS:        ${{ secrets.KEY_PASS }}
      STORE_PASS:      ${{ secrets.STORE_PASS }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Prepare keystore (if provided)
        shell: bash
        run: |
          if [ -n "$KEYSTORE_BASE64" ]; then
            echo "$KEYSTORE_BASE64" | base64 -d > keystore.jks
            echo "SIGNING_KEYSTORE_PATH=$GITHUB_WORKSPACE/keystore.jks" >> $GITHUB_ENV
            echo "SIGNING_KEY_ALIAS=$KEY_ALIAS" >> $GITHUB_ENV
            echo "SIGNING_KEY_PASSWORD=$KEY_PASS" >> $GITHUB_ENV
            echo "SIGNING_STORE_PASSWORD=$STORE_PASS" >> $GITHUB_ENV
          else
            echo "No keystore secrets found; failing early."
            exit 1
          fi

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build Sender release
        run: ./gradlew :android-sender:assembleRelease

      - name: Build Viewer release
        run: ./gradlew :android-viewer:assembleRelease

      - name: Upload signed APKs
        uses: actions/upload-artifact@v4
        with:
          name: signed-release-apks
          path: |
            android-sender/app/build/outputs/apk/release/*.apk
            android-viewer/app/build/outputs/apk/release/*.apk
